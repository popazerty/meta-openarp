*** linux-sh4-2.6.32.46_stm24_0209.orig/arch/sh/kernel/setup.c	2011-11-24 22:22:25.000000000 +0200
--- linux-sh4/arch/sh/kernel//setup.c	2011-11-25 01:51:28.388809920 +0200
***************
*** 239,283 ****
  void __init setup_bootmem_allocator(unsigned long free_pfn)
  {
  	unsigned long bootmap_size;
- 	unsigned long bootmap_pages, bootmem_paddr;
- 	u64 total_pages = (lmb_end_of_DRAM() - __MEMORY_START) >> PAGE_SHIFT;
- 	int i;
- 
- 	bootmap_pages = bootmem_bootmap_pages(total_pages);
- 
- 	bootmem_paddr = lmb_alloc(bootmap_pages << PAGE_SHIFT, PAGE_SIZE);
  
  	/*
  	 * Find a proper area for the bootmem bitmap. After this
  	 * bootstrap step all allocations (until the page allocator
  	 * is intact) must be done via bootmem_alloc().
  	 */
! 	bootmap_size = init_bootmem_node(NODE_DATA(0),
! 					 bootmem_paddr >> PAGE_SHIFT,
  					 min_low_pfn, max_low_pfn);
  
! 	/* Add active regions with valid PFNs. */
! 	for (i = 0; i < lmb.memory.cnt; i++) {
! 		unsigned long start_pfn, end_pfn;
! 		start_pfn = lmb.memory.region[i].base >> PAGE_SHIFT;
! 		end_pfn = start_pfn + lmb_size_pages(&lmb.memory, i);
! 		__add_active_range(0, start_pfn, end_pfn);
! 	}
  
  	/*
! 	 * Add all physical memory to the bootmem map and mark each
! 	 * area as present.
  	 */
! 	register_bootmem_low_pages();
  
! 	/* Reserve the sections we're already using. */
! 	for (i = 0; i < lmb.reserved.cnt; i++)
! 		reserve_bootmem(lmb.reserved.region[i].base,
! 				lmb_size_bytes(&lmb.reserved, i),
  				BOOTMEM_DEFAULT);
  
- 	node_set_online(0);
- 
  	sparse_memory_present_with_active_regions(0);
  
  #ifdef CONFIG_BLK_DEV_INITRD
--- 239,277 ----
  void __init setup_bootmem_allocator(unsigned long free_pfn)
  {
  	unsigned long bootmap_size;
  
  	/*
  	 * Find a proper area for the bootmem bitmap. After this
  	 * bootstrap step all allocations (until the page allocator
  	 * is intact) must be done via bootmem_alloc().
  	 */
! 	bootmap_size = init_bootmem_node(NODE_DATA(0), free_pfn,
  					 min_low_pfn, max_low_pfn);
  
! 	__add_active_range(0, min_low_pfn, max_low_pfn);
! 	register_bootmem_low_pages();
! 
! 	node_set_online(0);
  
  	/*
! 	 * Reserve the kernel text and
! 	 * Reserve the bootmem bitmap. We do this in two steps (first step
! 	 * was init_bootmem()), because this catches the (definitely buggy)
! 	 * case of us accidentally initializing the bootmem allocator with
! 	 * an invalid RAM area.
  	 */
! 	reserve_bootmem(__MEMORY_START + CONFIG_ZERO_PAGE_OFFSET,
! 			(PFN_PHYS(free_pfn) + bootmap_size + PAGE_SIZE - 1) -
! 			(__MEMORY_START + CONFIG_ZERO_PAGE_OFFSET),
! 			BOOTMEM_DEFAULT);
  
! 	/*
! 	 * Reserve physical pages below CONFIG_ZERO_PAGE_OFFSET.
! 	 */
! 	if (CONFIG_ZERO_PAGE_OFFSET != 0)
! 		reserve_bootmem(__MEMORY_START, CONFIG_ZERO_PAGE_OFFSET,
  				BOOTMEM_DEFAULT);
  
  	sparse_memory_present_with_active_regions(0);
  
  #ifdef CONFIG_BLK_DEV_INITRD
***************
*** 308,344 ****
  static void __init setup_memory(void)
  {
  	unsigned long start_pfn;
- 	u64 base = min_low_pfn << PAGE_SHIFT;
- 	u64 size = (max_low_pfn << PAGE_SHIFT) - base;
  
  	/*
  	 * Partially used pages are not usable - thus
  	 * we are rounding upwards:
  	 */
  	start_pfn = PFN_UP(__pa(_end));
- 
- 	lmb_add(base, size);
- 
- 	/*
- 	 * Reserve the kernel text and
- 	 * Reserve the bootmem bitmap. We do this in two steps (first step
- 	 * was init_bootmem()), because this catches the (definitely buggy)
- 	 * case of us accidentally initializing the bootmem allocator with
- 	 * an invalid RAM area.
- 	 */
- 	lmb_reserve(__MEMORY_START + CONFIG_ZERO_PAGE_OFFSET,
- 		    (PFN_PHYS(start_pfn) + PAGE_SIZE - 1) -
- 		    (__MEMORY_START + CONFIG_ZERO_PAGE_OFFSET));
- 
- 	/*
- 	 * Reserve physical pages below CONFIG_ZERO_PAGE_OFFSET.
- 	 */
- 	if (CONFIG_ZERO_PAGE_OFFSET != 0)
- 		lmb_reserve(__MEMORY_START, CONFIG_ZERO_PAGE_OFFSET);
- 
- 	lmb_analyze();
- 	lmb_dump_all();
- 
  	setup_bootmem_allocator(start_pfn);
  }
  #else
--- 302,313 ----
***************
*** 443,449 ****
  	nodes_clear(node_online_map);
  
  	/* Setup bootmem with available RAM */
- 	lmb_init();
  	setup_memory();
  	sparse_init();
  
--- 412,417 ----
*** linux-sh4-2.6.32.46_stm24_0209.orig/arch/sh/kernel/sh_ksyms_32.c	2011-11-24 22:22:25.000000000 +0200
--- linux-sh4/arch/sh/kernel//sh_ksyms_32.c	2011-11-25 00:25:52.744562206 +0200
***************
*** 52,57 ****
--- 52,60 ----
  EXPORT_SYMBOL(__ndelay);
  EXPORT_SYMBOL(__const_udelay);
  
+ /* Dagobert: Need to export this if we use CONFIG_CC_OPTIMIZE_FOR_SIZE */
+ EXPORT_SYMBOL(strcpy);
+ 
  #define DECLARE_EXPORT(name)		\
  	extern void name(void);EXPORT_SYMBOL(name)
  

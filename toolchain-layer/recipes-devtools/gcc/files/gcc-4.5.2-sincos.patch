Index: gcc/gcc/tree-ssa-math-opts.c
===================================================================
--- gcc/gcc/tree-ssa-math-opts.c	(revision 1579)
+++ gcc/gcc/tree-ssa-math-opts.c	(working copy)
@@ -789,7 +789,7 @@
   /* Make sure we have either sincos or cexp.  */
   return (TARGET_HAS_SINCOS
 	  || TARGET_C99_FUNCTIONS)
-	 && optimize;
+	 && flag_cse_sincos;
 }
 
 struct gimple_opt_pass pass_cse_sincos =
Index: gcc/gcc/opts.c
===================================================================
--- gcc/gcc/opts.c	(revision 1579)
+++ gcc/gcc/opts.c	(working copy)
@@ -888,6 +888,7 @@
   flag_optimize_sibling_calls = opt2;
   flag_forward_propagate = opt2;
   flag_cse_follow_jumps = opt2;
+  flag_cse_sincos = opt2;
   flag_gcse = opt2;
   flag_expensive_optimizations = opt2;
   flag_rerun_cse_after_loop = opt2;
Index: gcc/gcc/common.opt
===================================================================
--- gcc/gcc/common.opt	(revision 1579)
+++ gcc/gcc/common.opt	(working copy)
@@ -550,6 +550,10 @@
 Perform redundant load after store elimination in global common subexpression
 elimination
 
+fcse-sincos
+Common Report Var(flag_cse_sincos) Optimization
+Enable sincos merging
+
 fgcse-after-reload
 Common Report Var(flag_gcse_after_reload) Optimization
 Perform global common subexpression elimination after register allocation

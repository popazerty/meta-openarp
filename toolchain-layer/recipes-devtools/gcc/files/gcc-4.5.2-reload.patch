2011-02-14  Christian Bruel  <christian.bruel@st.com>

        https://bugzilla.stlinux.com/show_bug.cgi?id=11193
	* gcc/reload.c (find_reloads): Revert exclusion of alternatives
	 containing small register_class.

Index: gcc/gcc/reload.c
===================================================================
--- gcc/gcc/reload.c	(revision 1641)
+++ gcc/gcc/reload.c	(working copy)
@@ -2598,7 +2598,6 @@
   char goal_alternative_earlyclobber[MAX_RECOG_OPERANDS];
   int goal_alternative_swapped;
   int best;
-  int best_small_class_operands_num;
   int commutative;
   char operands_match[MAX_RECOG_OPERANDS][MAX_RECOG_OPERANDS];
   rtx substed_operand[MAX_RECOG_OPERANDS];
@@ -2924,7 +2923,6 @@
      all the operands together against the register constraints.  */
 
   best = MAX_RECOG_OPERANDS * 2 + 600;
-  best_small_class_operands_num = 0;
 
   swapped = 0;
   goal_alternative_swapped = 0;
@@ -3708,50 +3706,24 @@
       /* If this alternative can be made to work by reloading,
 	 and it needs less reloading than the others checked so far,
 	 record it as the chosen goal for reloading.  */
-      if (! bad)
-	{
-	  bool change_p = false;
-	  int small_class_operands_num = 0;
-
-	  if (best >= losers)
-	    {
-	      for (i = 0; i < noperands; i++)
-		small_class_operands_num
-		  += SMALL_REGISTER_CLASS_P (this_alternative[i]) ? 1 : 0;
-	      if (best > losers
-		  || (best == losers
-		      /* If the cost of the reloads is the same,
-			 prefer alternative which requires minimal
-			 number of small register classes for the
-			 operands.  This improves chances of reloads
-			 for insn requiring small register
-			 classes.  */
-		      && (small_class_operands_num
-			  < best_small_class_operands_num)))
-		change_p = true;
-	    }
-	  if (change_p)
+      if (! bad && best > losers)
 	    {
 	      for (i = 0; i < noperands; i++)
 		{
 		  goal_alternative[i] = this_alternative[i];
 		  goal_alternative_win[i] = this_alternative_win[i];
-		  goal_alternative_match_win[i]
-		    = this_alternative_match_win[i];
-		  goal_alternative_offmemok[i]
-		    = this_alternative_offmemok[i];
+	      goal_alternative_match_win[i] = this_alternative_match_win[i];
+	      goal_alternative_offmemok[i] = this_alternative_offmemok[i];
 		  goal_alternative_matches[i] = this_alternative_matches[i];
 		  goal_alternative_earlyclobber[i]
 		    = this_alternative_earlyclobber[i];
 		}
 	      goal_alternative_swapped = swapped;
 	      best = losers;
-	      best_small_class_operands_num = small_class_operands_num;
 	      goal_alternative_number = this_alternative_number;
 	      goal_earlyclobber = this_earlyclobber;
 	    }
 	}
-    }
 
   /* If insn is commutative (it's safe to exchange a certain pair of operands)
      then we need to try each alternative twice,
